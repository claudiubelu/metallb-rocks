name: metallb-speaker
summary: Rock for the Metallb speaker.
description: >
  This rock is a drop in replacement for the
  quay.io/metallb/speaker image.
version: v0.14.5
license: Apache-2.0

base: bare
build-base: ubuntu@22.04
platforms:
  amd64:

entrypoint-service: speaker
services:
  speaker:
    command: /speaker [ -h ]
    override: replace
    startup: enabled

parts:
  add-base-files:
    plugin: nil
    stage-packages:
      # Original Dockerfile uses gcr.io/distroless/static:latest as a base.
      # This image contains the following:
      # https://github.com/GoogleContainerTools/distroless/blob/1533e54a73805ec13fe0cc68218fc7a215a0a6f7/base/README.md
      - ca-certificates
      - tzdata
      - base-passwd
      # Helm charts may expect the image to be able to copy some files.
      - bash
      - coreutils
    override-build: |
      ln -sf bash "${CRAFT_PART_INSTALL}/bin/sh"

  # Can't have stage packages and stage slices together, apparently.
  add-base-slices:
    plugin: nil
    stage-packages:
      - base-files_tmp

  build-deps:
    plugin: nil
    build-snaps:
      - go/1.22/stable

  speaker:
    after: [build-deps]
    plugin: go
    source-type: git
    source: https://github.com/metallb/metallb
    source-tag: v0.14.5
    source-depth: 1
    override-build: |
      GIT_COMMIT=`git rev-parse HEAD`
      # We'll use the tag name.
      GIT_BRANCH=`git describe --tags --abbrev=0`

      # build frr metrics
      CGO_ENABLED=0 go build -v -o $CRAFT_PART_INSTALL/frr-metrics \
        -ldflags "-X 'go.universe.tf/metallb/internal/version.gitCommit=${GIT_COMMIT}' -X 'go.universe.tf/metallb/internal/version.gitBranch=${GIT_BRANCH}'" \
        ./frr-tools/metrics/exporter.go

      # build speaker
      CGO_ENABLED=0 go build -v -o $CRAFT_PART_INSTALL/speaker \
        -ldflags "-X 'go.universe.tf/metallb/internal/version.gitCommit=${GIT_COMMIT}' -X 'go.universe.tf/metallb/internal/version.gitBranch=${GIT_BRANCH}'" \
        ./speaker

      cp $CRAFT_PART_BUILD/LICENSE $CRAFT_PART_INSTALL/
      cp $CRAFT_PART_SRC/frr-tools/reloader/frr-reloader.sh $CRAFT_PART_INSTALL/
